class Solution {
    public int maxMoves(int[][] grid) {
        int m = grid.length;
        int n = grid[0].length;
        int[][] dp = new int[m][n];
        for(int col=n-2;col>=0;col--){
            for(int row=0;row<m;row++){
                int maxMoves = 0;
                if(row > 0 && grid[row][col] < grid[row-1][col+1]){
                    maxMoves = Math.max(maxMoves,1+dp[row-1][col+1]);
                }
                if(grid[row][col]<grid[row][col+1]){
                    maxMoves = Math.max(maxMoves,1+dp[row][col+1]);
                }
                if(row < m-1 && grid[row][col] < grid[row+1][col+1]){
                    maxMoves = Math.max(maxMoves,1+dp[row+1][col+1]);
                }
                dp[row][col] = maxMoves;
            }
        }
        int result = 0;
        for(int i=0;i<m;i++){
            result = Math.max(result,dp[i][0]);
        }
        return result;
    }
}
