class Solution {
    public int minimizedMaximum(int n, int[] quantities) {
        int left = 1;
        int right = 0;
        for(int quantity:quantities){
            right = Math.max(right,quantity);
        }
        while(left<right){
            int mid = left+(right-left)/2;
            if(canDistribute(mid,n,quantities)){
                right = mid;
            }else{
                left = mid+1;
            }
        }
        return left;
    }
    private boolean canDistribute(int maxProducts,int n,int[] quantities){
        int requiredStores = 0;
        for(int quantity:quantities){
            requiredStores += (quantity+maxProducts-1)/maxProducts;
            if(requiredStores>n){
                return false;
            }
        }
        return true;
    }
}
