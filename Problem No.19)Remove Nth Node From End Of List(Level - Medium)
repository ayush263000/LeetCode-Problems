class Solution {
    public ListNode removeNthFromEnd(ListNode head, int n) {
        if(head == null){
            return head;
        }
        ListNode dummy = new ListNode(1);
        dummy.next = head;
        ListNode front = dummy;
        ListNode back = dummy;
        for(int i=0;i<=n;i++){
            front = front.next;
        }
        while(front != null){
            front = front.next;
            back = back.next;
        } 
        back.next = back.next.next;
        return dummy.next;
    }
}
Or

class Solution {
    public ListNode removeNthFromEnd(ListNode head, int n) {
        if(head.next == null){
            return null;
        }
       int size = 0;
       ListNode curr = head;
       while(curr != null) {
        curr = curr.next;
        size++;
       }
       if(n==size){
        return head.next;
       }
       int indexToSearch = size - n;
       ListNode prev = head;
       int i = 1;
       while(i<indexToSearch){
        prev = prev.next;
        i++;
       }
       prev.next = prev.next.next;
       return head; 
    }
}
